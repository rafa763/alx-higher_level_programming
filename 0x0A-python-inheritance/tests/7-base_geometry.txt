"""

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> #check with correct params
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)


>>> #check with value = 0
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: <name> must be greater than 0

>>> #check with negative value
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", -12)
Traceback (most recent call last):
ValueError: <name> must be greater than 0

>>> #check with non int value
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", "test")
Traceback (most recent call last):
TypeError: <name> must be an integer

>>> #missing 1 param
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> #missing 2 params
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

"""
